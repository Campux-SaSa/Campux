// Creating a container of mongodb
docker container run --name mongodb --publish 27017:27017 -d mongo
// Getting access through the mongo 
docker container exec -it mydatabase bash
// Using software mongo
mongo
// Creating a database
use mydbone
// Exiting mongo shell
exit
// Adding authentication to the database
mongo --port 27017 -u username -p password --authenticationDatabase mydbone


// With authentication
docker run -d -p 27017:27017 --name database -v mongo-data:/data/db -e MONGODB_INITDB_ROOT_USERNAME=Campux -e MONGODB_INITDB_ROOT_PASSWORD=Parvardegar mongo:latest


// Starting a redis instance, First instance is called redisCache
docker run --name some-redis -d redis

// Connecting to it with redis-cli
docker run -it --network some-network --rm redis redis-cli -h some-redis


docker run -d -p 27017:27017 --name container_name \
      -e MONGO_INITDB_ROOT_USERNAME=admin \
      -e MONGO_INITDB_ROOT_PASSWORD=password \
      mongo

 // The -v is for persistence so if we restart the mongo, the data stays

docker run --name dada1 -d -v ~/data/db -p 27017:27017  mongo

// The used command for our mongodb
docker run --name dbmongo -d --restart unless-stopped -v ~/data/db -p 27017:27017 -e MONGO_INITDB_ROOT_USERNAME=AzureDiamond -e MONGO_INITDB_ROOT_PASSWORD=Parvardegar007Saghafian mongo

source: https://github.com/gwuhaolin/livego
// Getting the key
http://localhost:8090/control/get?room=movie
// The command used for the live stream 
docker run --restart unless-stopped -p 1935:1935 -p 7001:7001 -p 7002:7002 -p 8090:8090 -d gwuhaolin/livego


docker run --name redis -d --restart unless-stopped  -v $PWD/data:/data -p 4000:6379 redis redis-server --requirepass "Parvardegar007Salamatian"